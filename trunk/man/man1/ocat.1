.\" Copyright 2008 Bernhard R. Fischer, Daniel Haslinger.
.\"
.\" This file is part of OnionCat.
.\"
.\" OnionCat is free software: you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation, version 3 of the License.
.\"
.\" OnionCat is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with OnionCat. If not, see <http://www.gnu.org/licenses/>.
.\"
.TH OCAT 1 2008-06-23 "ocat" "OnionCat User's Manual"
.SH NAME
ocat \- OnionCat creates a transparent IPv6 layer on top of TOR's hidden services.
.SH SYNOPSIS
.B ocat
-i \fIonion_id                      (1st form)\fR
.br
.B ocat
-o \fIIPv6_address                  (2nd form)\fR
.br
.B ocat
[\fIOPTION\fR] \fIonion_id                (3rd form)\fR
.br
.SH DESCRIPTION
OnionCat creates a transparent IPv6 layer on top of TOR's hidden services. It
transmits any kind of IP-based data transparently through the TOR network on a
location hidden basis. You can think of it as a point-to-multipoint VPN
between hidden services.

OnionCat is a stand-alone application which runs in userland and is a connector
between TOR and the local OS. Any protocol which is based on IP can be
transmitted. Of course, UDP and TCP (and probably ICMP) are the most important
ones but all other protocols can also be forwarded through it.

.TP
\fB\-a\fR
OnionCat creates a log file at $HOME/.ocat/connect_log. All incomming connects are
log to that file. $HOME is determined from the user under which OnionCat runs (see option -u).
.TP
\fB\-b\fR
Run OnionCat in background.
.TP
\fB\-C\fR
Disable the local controller interface. The controller interfaces listens on localhost (127.0.0.1 and ::1 port 8066)
for incomming connections. It's currently used for debugging purpose and not thread-safe and does not
have any kind of authentication or authorization mechanism. Hence,
it should not be used in production environments.
.TP
\fB\-T\fR tun_dev
tun device file to open for creation of tun interface, defaults to
/dev/net/tun. Setup of a tun device needs root permissions. ocat automatically
changes userid after the tun device is set up correctly.
.TP
\fB\-u\fR username
username under which ocat should run. The uid is changed as soon as possible
after tun device setup.

.SH FILES
$HOME/.ocat/connect_log
.SH AUTHOR
Written by Bernhard R. Fischer.
Conecption by Bernhard R. Fischer and Daniel Haslinger.
.SH "SEE ALSO"
OnionCat project page http://www.abenteuerland.at/onioncat/

TOR project homepage http://www.torproject.org/
.SH COPYRIGHT
Copyright 2008 Bernhard R. Fischer, Daniel Haslinger.

This file is part of OnionCat.

OnionCat is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, version 3 of the License.

OnionCat is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with OnionCat. If not, see <http://www.gnu.org/licenses/>.
